AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  StaticStackName:
    Description: Name of the static stack
    Type: String
  ScraperStackName:
    Description: Name of the scraper stack
    Type: String
  DockerRepoStackName:
    Description: Name of the docker repo stack
    Type: String
  EnvironmentType:
    Description: The environment type (prod or dev)
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - dev
    ConstraintDescription: must be a prod or dev

Resources:
  SpiderQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 300
      QueueName: !Sub caseharvester_spider_queue_${EnvironmentType}
      
  SpiderRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub caseharvester_spider_role_${EnvironmentType}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: !Sub caseharvester_spider_permissions_${EnvironmentType}
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:PutRetentionPolicy
                Resource: "*"
              - Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                Resource: !GetAtt SpiderQueue.Arn
              - Effect: Allow
                Action:
                  - sqs:SendMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                Resource:
                  Fn::ImportValue: !Sub "${ScraperStackName}-ScraperQueueArn"

  SpiderInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref SpiderRole

  SpiderInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub caseharvester_spider_security_group_${EnvironmentType}
      GroupDescription: Controls access to Case Harvester spider instances
      VpcId:
        Fn::ImportValue: !Sub ${StaticStackName}-VPCId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Anywhere
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp

  SpiderTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub caseharvester_spider_template_${EnvironmentType}
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              DeleteOnTermination: true
              Encrypted: false
              VolumeSize: 8
        IamInstanceProfile:
          Arn: !GetAtt SpiderInstanceProfile.Arn
        ImageId: ami-0e263cd9983d8519c
        InstanceInitiatedShutdownBehavior: stop
        InstanceType: t3a.nano
        KeyName: dan_ojb
        NetworkInterfaces:
          - AssociatePublicIpAddress: true
            DeleteOnTermination: true
            DeviceIndex: 0
            SubnetId:
              Fn::ImportValue: !Sub ${StaticStackName}-VPCPublicSubnet1Id
            Groups:
              - !Ref SpiderInstanceSecurityGroup

  SpiderTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: !Sub caseharvester_spider_container_${EnvironmentType}
          Command:
            - python
            - -u
            - harvester.py
            - --environment
            - !Sub ${EnvironmentType}
            - spider
            - --help
          Environment:
            - Name: SPIDER_QUEUE_NAME
              Value: !GetAtt SpiderQueue.QueueName
          Image: !Sub
            - ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${repo_name}
            - repo_name:
                Fn::ImportValue: !Sub ${DockerRepoStackName}-DockerRepoName
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-create-group: true
              awslogs-region: !Sub ${AWS::Region}
              awslogs-group: !Sub caseharvester-spider-${EnvironmentType}
              awslogs-stream-prefix: caseharvester-spider-logs
      RequiresCompatibilities:
        - FARGATE
      Cpu: '1024'
      Memory: '4096'
      ExecutionRoleArn:
        Fn::ImportValue: !Sub ${StaticStackName}-ExecutionRoleArn
      NetworkMode: awsvpc
      TaskRoleArn: !GetAtt SpiderRole.Arn

Outputs:
  SpiderQueueName:
    Description: Spider queue name
    Value: !GetAtt SpiderQueue.QueueName
    Export:
      Name: !Sub ${AWS::StackName}-SpiderQueueName
  SpiderLaunchTemplateId:
    Description: Spider launch template ID
    Value: !Ref SpiderTemplate
    Export:
      Name: !Sub ${AWS::StackName}-SpiderLaunchTemplateId